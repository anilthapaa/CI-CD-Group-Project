name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build, Test, Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4

      - name: 📦 Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🗃️ Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-

      - name: 📥 Install dependencies
        run: npm install

      - name: 🧪 Run tests
        run: npm test

      - name: 🔍 Run linter
        run: npm run lint || true

      - name: 📤 Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/

  deploy:
    name: 🚀 Deploy on Success
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && success()

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4

      - name: 🌐 Print environment info
        run: echo "Deploying to ${{ vars.DEPLOY_ENV }}"

      - name: 🔐 Deploy with API token
        run: |
          curl -X POST https://api.example.com/deploy \
            -H "Authorization: Bearer ${{ secrets.DEPLOY_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"repo": "${{ github.repository }}", "branch": "${{ github.ref_name }}"}'
